@model ProductViewModel

<partial name="_header">

<div class="container">
    <div class="row">
        <div class="col-md-3">
            @await Component.InvokeAsync("Categories")
            <partial name="_search">
        </div>
        <div class="col-md-9">
            <div class="row">
                @foreach (var item in Model.Products)
                            {
                            <div class="col-md-4 mb-5 card-size" style="height: 350px; max-height:350px">
                            @await Html.PartialAsync("_product",item)
                            </div>
                            
                            }
            </div>
        </div>
    </div>
</div>



@section Scripts{
     <script>
        var check1 =document.getElementById('r1');
        var check2 =document.getElementById('r2');
        var check3 =document.getElementById('r3');

        var l1 =document.getElementById('l1');
        var l2 =document.getElementById('l2');
        var l3 =document.getElementById('l3');

        var figure= document.querySelector('.figure');

        var middle= document.querySelector('.h-middle');
        var radio= document.querySelector('.radio');
        var read= document.querySelector('.read');


        figure.style.left='0%';

        var left=0;


        // Timer

        var seconds = 0;

        function incrementSeconds() {
            seconds += 1;
            Animate();
        }
        
        var cancel = setInterval(incrementSeconds, 1000);
        



        function Animate(){
            if(seconds%3==0){
                if(left<-200){
                    left=0;
                }
                figure.style.left=left+'%';
                if(left==0){
                    l1.style.opacity=0.8;
                    l2.style.opacity=0.5;
                    l3.style.opacity=0.5;
                }
                if(left==-100){
                    l1.style.opacity=0.5;
                    l2.style.opacity=0.8;
                    l3.style.opacity=0.5;
                }
                if(left==-200){
                    l1.style.opacity=0.5;
                    l2.style.opacity=0.5;
                    l3.style.opacity=0.8;
                }
                left-=100;
            }
        }
        


        
        middle.addEventListener('mouseout',function(){
            seconds=0;
            cancel = setInterval(incrementSeconds, 1000);
            
        });
        middle.addEventListener('mouseover',function(){
            seconds=0;
            clearInterval(cancel);
            
        });
        
        check1.addEventListener("click",function(){
            
            figure.style.left=0;

            l1.style.opacity=0.8;
            l2.style.opacity=0.5;
            l3.style.opacity=0.5;
        });
        check2.addEventListener("click",function(){
            figure.style.left="-100%";
            l1.style.opacity=0.5;
            l2.style.opacity=0.8;
            l3.style.opacity=0.5;
        });
        check3.addEventListener("click",function(){
            figure.style.left="-200%";
            l1.style.opacity=0.5;
            l2.style.opacity=0.5;
            l3.style.opacity=0.8;
        });


        Animate();
    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js" integrity="sha384-+YQ4JLhjyBLPDQt//I+STsc9iw4uQqACwlvpslubQzn4u2UU2UFM80nGisd026JF" crossorigin="anonymous"></script>
}